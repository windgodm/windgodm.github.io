{"title":"neo4j与CQL","uid":"ff3b8559df1c08290e25585b94350c6d","slug":"neo4j-CQL","date":"2021-09-20T04:00:00.000Z","updated":"2021-09-28T10:12:41.150Z","comments":true,"path":"api/articles/neo4j-CQL.json","keywords":null,"cover":null,"content":"<h1 id=\"ne04j与CQL\"><a href=\"#ne04j与CQL\" class=\"headerlink\" title=\"ne04j与CQL\"></a>ne04j与CQL</h1><h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>neo4j是个nosql数据库，通过docker安装可以启动一个本地服务器，在浏览器中访问。能画出数据的关系图。通过CQL语言进行操作。</p>\n<p>主要用途是构建社会关系、知识图谱这种类型的数据库。自带图形化展示数据的功能。</p>\n<h2 id=\"通过docker安装\"><a href=\"#通过docker安装\" class=\"headerlink\" title=\"通过docker安装\"></a>通过docker安装</h2><p>首先安装docker，win10需要先装wsl2，可以通过下载离线安装包的方z式，安装某个wsl2子系统到指定位置，具体不在絮述。</p>\n<p>官网查询最新版本，比如是4.3.3，在wsl2的shell中执行以下命令拉取neo4j的docker。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker pull neo4j:4.3.3-community</code></pre>\n\n<p>执行以下命令运行。其中NEO4J_AUTH后跟着的是初始 账号/密码。</p>\n<pre class=\"line-numbers language-shell\" data-language=\"shell\"><code class=\"language-shell\">docker run -d --name container_name -p 7474:7474 -p 7687:7687 -v &#x2F;home&#x2F;neo4j&#x2F;data:&#x2F;data -v &#x2F;home&#x2F;neo4j&#x2F;logs:&#x2F;logs -v &#x2F;home&#x2F;neo4j&#x2F;conf:&#x2F;var&#x2F;lib&#x2F;neo4j&#x2F;conf -v &#x2F;home&#x2F;neo4j&#x2F;import:&#x2F;var&#x2F;lib&#x2F;neo4j&#x2F;import --env NEO4J_AUTH&#x3D;neo4j&#x2F;password neo4j:4.3.3-community</code></pre>\n\n<h2 id=\"CQL\"><a href=\"#CQL\" class=\"headerlink\" title=\"CQL\"></a>CQL</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>1、Neo4j数据库服务器使用此&lt;node-name&gt;将此节点详细信息存储在Database.As中作为Neo4j DBA或Developer，我们不能使用它来访问节点详细信息。———为何不能呢？</p>\n<p>2、Neo4j数据库服务器创建一个&lt;label-name&gt;作为内部节点名称的别名。作为Neo4j DBA或Developer，我们应该使用此标签名称来访问节点详细信息。</p></blockquote>\n<h3 id=\"创建节点\"><a href=\"#创建节点\" class=\"headerlink\" title=\"创建节点\"></a>创建节点</h3><p><code>CREATE (&lt;node-name&gt;:&lt;label-name&gt;)</code></p>\n<p>node-name可以理解成编程语言里的变量名，是一条数据的别名、句柄，用于操作这一条数据。可以当成是一个临时变量。（可以参照下面第三、四个示例理解）<br>可以省略。</p>\n<p>label-name是数据的标签，或者说类型，有人把它类比成sql中的表名。</p>\n<p>示例如下：</p>\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 创建一个标签为person，没有其他属性、关系的节点。\n&#x2F;&#x2F; 写法1\nCREATE (a:person)\n&#x2F;&#x2F; 写法2，省略节点名\nCREATE (:person)</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 创建一个带有name、phone两个属性的节点。\nCREATE (a:person&#123;name:&#39;abc&#39;, phone:114514&#125;)</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 创建两个节点，并添加关系\n&#x2F;&#x2F; 写法1，创建时添加关系\nCREATE (p1:person) CREATE (p2:person)-[r:&#39;friend&#39;]-&gt;(p2)\n&#x2F;&#x2F; 写法2，创建后添加关系\nCREATE (p1:person) CREATE (p2:person) CREATE (p1)-[r:&#39;friend&#39;]-&gt;(p2)</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 创建一个节点，并在图中显示该节点\nCREATE (a:person) RETURN a</code></pre>\n\n<h3 id=\"搜索节点\"><a href=\"#搜索节点\" class=\"headerlink\" title=\"搜索节点\"></a>搜索节点</h3><pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 显示所有的节点及其关系\nMATCH (n) RETURN n</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 显示所有标签为person的节点及其关系\nMATCH (n:person) RETURN n</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 显示所有标签为person，属性id&#x3D;1的节点及其关系\nMATCH (n:person&#123;id:1&#125;) RETURN n</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 显示所有关系为friend的节点\nMATCH p&#x3D;()-[r:&#39;friend&#39;]-&gt;() RETURN p</code></pre>\n\n<h3 id=\"添加属性、关系\"><a href=\"#添加属性、关系\" class=\"headerlink\" title=\"添加属性、关系\"></a>添加属性、关系</h3><p>需要配合MATCH使用。</p>\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 添加修改属性\nMATCH (n:person&#123;id:1&#125;) SET n.name&#x3D;&#39;abc&#39;</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">&#x2F;&#x2F; 添加关系\nMATCH (p:person&#123;id:1&#125;) MATCH (n:person&#123;id:1&#125;) CREATE (p)-[r:&#39;friend&#39;]-&gt;(n)</code></pre>\n\n<h3 id=\"删除节点\"><a href=\"#删除节点\" class=\"headerlink\" title=\"删除节点\"></a>删除节点</h3><p>需要配合MATCH使用。</p>\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">MATCH (p:person&#123;id:1&#125;) DELETE p</code></pre>\n\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">MATCH (p:person&#123;id:1&#125;)-[r]-(n:person&#123;id:2&#125;) DELETE p,r,n</code></pre>\n\n<h3 id=\"删除属性、关系\"><a href=\"#删除属性、关系\" class=\"headerlink\" title=\"删除属性、关系\"></a>删除属性、关系</h3><pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">MATCH (p:person&#123;id:1&#125;) REMOVE n.name</code></pre>\n\n<h3 id=\"读取文件\"><a href=\"#读取文件\" class=\"headerlink\" title=\"读取文件\"></a>读取文件</h3><p>csv文件内容：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">id, name1, aaa2, bbb</code></pre>\n\n<p>读取并创建节点：</p>\n<pre class=\"line-numbers language-CQL\" data-language=\"CQL\"><code class=\"language-CQL\">LOAD CSV FROM &#39;pathname&#39; AS line FILEDTERMINATOR &#39;,&#39; CREATE (:p&#123;id:toInterger(line[0]), name:line[1]&#125;)</code></pre>\n\n","text":"ne04j与CQL摘要neo4j是个nosql数据库，通过docker安装可以启动一个本地服务器，在浏览器中访问。能画出数据的关系图。通过CQL语言进行操作。 主要用途是构建社会关系、知识图谱这种类型的数据库。自带图形化展示数据的功能。 通过docker安装首先安装docker，...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Database","slug":"Database","count":1,"path":"api/categories/Database.json"}],"tags":[{"name":"Database","slug":"Database","count":2,"path":"api/tags/Database.json"},{"name":"neo4j","slug":"neo4j","count":1,"path":"api/tags/neo4j.json"},{"name":"CQL","slug":"CQL","count":1,"path":"api/tags/CQL.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#ne04j%E4%B8%8ECQL\"><span class=\"toc-text\">ne04j与CQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%91%98%E8%A6%81\"><span class=\"toc-text\">摘要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%9A%E8%BF%87docker%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">通过docker安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CQL\"><span class=\"toc-text\">CQL</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">创建节点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%90%9C%E7%B4%A2%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">搜索节点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%BB%E5%8A%A0%E5%B1%9E%E6%80%A7%E3%80%81%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">添加属性、关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9\"><span class=\"toc-text\">删除节点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%A0%E9%99%A4%E5%B1%9E%E6%80%A7%E3%80%81%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">删除属性、关系</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">读取文件</span></a></li></ol></li></ol></li></ol>","author":{"name":"御史神风","slug":"御史神风","avatar":"/blog/imgs/child.jpg","link":"/","description":"芜湖~好耶!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"BeaEngine","uid":"14f57ee55d88ddbbbcf4ab3554ca49cd","slug":"BeaEngine","date":"2021-09-20T04:00:00.000Z","updated":"2021-09-28T10:17:39.992Z","comments":true,"path":"api/articles/BeaEngine.json","keywords":null,"cover":null,"text":"BeaEngine摘要一个反汇编引擎，支持c++、python等。 具体使用参照官方github的example，非常详细。 常用char buf; UINT64 va; DISASM infos; int len; &#x2F;&#x2F; init memset(&amp;i...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Programing","slug":"Programing","count":2,"path":"api/categories/Programing.json"}],"tags":[{"name":"Programing","slug":"Programing","count":2,"path":"api/tags/Programing.json"},{"name":"BeaEngine","slug":"BeaEngine","count":2,"path":"api/tags/BeaEngine.json"}],"author":{"name":"御史神风","slug":"御史神风","avatar":"/blog/imgs/child.jpg","link":"/","description":"芜湖~好耶!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"vmp2 (2) 初步分析handler(BeaEngine)","uid":"74105a35f31797dc18272c05740bf85c","slug":"vmp2-p2","date":"2021-09-15T04:00:00.000Z","updated":"2021-09-28T10:29:30.457Z","comments":true,"path":"api/articles/vmp2-p2.json","keywords":null,"cover":null,"text":"VMP2（2）初步分析handler(BeaEngine)摘要基于手动初步分析的基础，了解了vmp2的结构以及handler表及解密方式。现在写些工具用于辅助分析。 流程为： 获取handler RVA 分析跳转并dump handler 由subs1(*top = top2)这...","link":"","photos":[],"count_time":{"symbolsCount":"5.4k","symbolsTime":"5 mins."},"categories":[{"name":"Re","slug":"Re","count":3,"path":"api/categories/Re.json"}],"tags":[{"name":"re","slug":"re","count":10,"path":"api/tags/re.json"},{"name":"vmp2","slug":"vmp2","count":3,"path":"api/tags/vmp2.json"},{"name":"BeaEngine","slug":"BeaEngine","count":2,"path":"api/tags/BeaEngine.json"}],"author":{"name":"御史神风","slug":"御史神风","avatar":"/blog/imgs/child.jpg","link":"/","description":"芜湖~好耶!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}