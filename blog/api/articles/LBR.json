{"title":"Last Branch Record","uid":"06423ce97f1a4b9a785e5e8bd6e7c6eb","slug":"LBR","date":"2023-01-10T04:00:00.000Z","updated":"2024-01-17T10:27:33.853Z","comments":true,"path":"api/articles/LBR.json","keywords":null,"cover":null,"content":"<h1 id=\"Last-branch-record\"><a href=\"#Last-branch-record\" class=\"headerlink\" title=\"Last branch record\"></a>Last branch record</h1><h2 id=\"摘要\"><a href=\"#摘要\" class=\"headerlink\" title=\"摘要\"></a>摘要</h2><p>记录CPU产出的跳转指令，包括call、ret、jmp、中断、异常</p>\n<p>当跳转发生时，会记录跳转指令地址（from）和目的地址（to）</p>\n<p><strong>IA32_DEBUGCTL MSR</strong>位于01D9H</p>\n<p>flag：</p>\n<ul>\n<li><strong>LBR (last branch/interrupt/exception) flag (bit 0)</strong><ul>\n<li>设置该位后，开始记录最近的分支、中断、异常到LBR Stack</li>\n</ul>\n</li>\n</ul>\n<p>LBR Stack：由n对msr寄存器组成</p>\n<p>LBR Top-of-Stack（TOS）Pointer：指示LBR Stack的栈顶</p>\n<h2 id=\"文档书签\"><a href=\"#文档书签\" class=\"headerlink\" title=\"文档书签\"></a>文档书签</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>sdm-vol3</p>\n<p>17.4 是概览</p>\n<p>17.4.1 中提到LBR Stack的细节参考 17.5.1、17.9.1（分别对应不同处理器）</p>\n<p>17.9 关于Nehalem微架构</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>不同处理器的LBR栈大小：</p>\n<p>sdm-vol-17.4.8 LBR Stack</p>\n<p>Table 17-4. LBR Stack Size and TOS Pointer Range</p></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>不同架构的相关寄存器定义：</p>\n<p>sdm-vol4-2.8，Nehalem微架构，寄存器位置：</p>\n<ul>\n<li><strong>IA32_DEBUGCTL</strong> 1D9H</li>\n<li><strong>MSR_LASTBRANCH_TOS</strong> 1C9H</li>\n<li><strong>MSR_LASTBRANCH_N_FROM_IP</strong><ul>\n<li>680H~68FH，16个</li>\n<li><strong>MSR_LASTBRANCH_0_FROM_IP</strong> 680H</li>\n</ul>\n</li>\n<li><strong>MSR_LASTBRANCH_N_TO_IP</strong><ul>\n<li>6C0H~6CFH，16个</li>\n<li><strong>MSR_LASTBRANCH_0_TO_IP</strong> 6C0H</li>\n</ul>\n</li>\n</ul>\n<p>sdm-vol4-2.22，P6 Family</p>\n<ul>\n<li><strong>DEBUGCTLMSR</strong> 1D9H</li>\n<li><strong>LASTBRANCHFROMIP</strong> 1DBH</li>\n<li><strong>LASTBRANCHTOIP</strong> 1DCH</li>\n</ul></blockquote>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><p>Nehalem微架构，遍历大小为16的LBR栈：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">unsigned long long fromips[16];\nunsigned long long toips[16];\nfor (int i &#x3D; 0; i &lt; 16; i++)\n    fromips[i] &#x3D; __readmsr(0x680 + i);\nfor (int i &#x3D; 0; i &lt; 16; i++)\n    toips[i] &#x3D; __readmsr(0x6C0 + i);</code></pre>\n\n\n\n<p>Nehalem微架构，获取最近的分支记录：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">tos &#x3D; _rdmsr[0x1C9]; &#x2F;&#x2F; MSR_LASTBRANCH_TOS\nlast_from_ip &#x3D; _rdmsr[0x680+tos]; &#x2F;&#x2F; MSR_LASTBRANCH_0_FROM_IP + TOS\nlast_to_ip &#x3D; _rdmsr[0x6C0+tos]; &#x2F;&#x2F; MSR_LASTBRANCH_0_TO_IP + TOS</code></pre>\n\n\n\n<p>Family 6 获取最近的分支记录：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">last_from_ip &#x3D; _rdmsr[0x1DB]; &#x2F;&#x2F; LASTBRANCHFROMIP\nlast_to_ip &#x3D; _rdmsr[0x1DC]; &#x2F;&#x2F; LASTBRANCHTOIP</code></pre>\n\n\n\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"https://blog.csdn.net/weixin_45030965/article/details/123716348\">Intel x86_64 LBR &amp; BTS功能_小立爱学习的博客-CSDN博客</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_45030965/article/details/124167465\">再谈Intel x86_64 LBR功能_小立爱学习的博客-CSDN博客</a></p>\n<p>(v77)325384-sdm-vol3</p>\n<p>(v77)325384-sdm-vol4</p>\n","feature":true,"text":"Last branch record摘要记录CPU产出的跳转指令，包括call、ret、jmp、中断、异常 当跳转发生时，会记录跳转指令地址（from）和目的地址（to） IA32_DEBUGCTL MSR位于01D9H flag： LBR (last branch/interr...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"Windows","slug":"Windows","count":21,"path":"api/categories/Windows.json"}],"tags":[{"name":"windows","slug":"windows","count":21,"path":"api/tags/windows.json"},{"name":"note","slug":"note","count":27,"path":"api/tags/note.json"},{"name":"kernel","slug":"kernel","count":7,"path":"api/tags/kernel.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Last-branch-record\"><span class=\"toc-text\">Last branch record</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%91%98%E8%A6%81\"><span class=\"toc-text\">摘要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%A1%A3%E4%B9%A6%E7%AD%BE\"><span class=\"toc-text\">文档书签</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">示例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83\"><span class=\"toc-text\">参考</span></a></li></ol></li></ol>","author":{"name":"御史神风","slug":"御史神风","avatar":"/blog/imgs/child.jpg","link":"/","description":"芜湖~好耶!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"VMP还原思路","uid":"a0e830c45ad93252cf7ca59a00282739","slug":"VMP-deobf","date":"2023-01-11T04:00:00.000Z","updated":"2024-01-17T10:29:52.502Z","comments":true,"path":"api/articles/VMP-deobf.json","keywords":null,"cover":[],"text":"1 摘要1.1 关于代码优化与还原关于还原，我认为难点是工作量大，需要自动化提升效率 还原和混淆是一对反义词，相同点是保证代码功能相近，不同是一个是使代码更易读，后者则相反 而代码优化非常类似，也要保证代码功能相近，不同是减少代码的体积或运行速度 所以我感觉还原和代码优化有很多共...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"Re","slug":"Re","count":4,"path":"api/categories/Re.json"}],"tags":[{"name":"re","slug":"re","count":12,"path":"api/tags/re.json"},{"name":"vmp","slug":"vmp","count":1,"path":"api/tags/vmp.json"}],"author":{"name":"御史神风","slug":"御史神风","avatar":"/blog/imgs/child.jpg","link":"/","description":"芜湖~好耶!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"angr-ctf","uid":"771dec62b399749444e273209cdd8e6e","slug":"angr-ctf","date":"2022-10-27T04:00:00.000Z","updated":"2024-01-05T07:10:16.932Z","comments":true,"path":"api/articles/angr-ctf.json","keywords":null,"cover":null,"text":"angr_ctfjakespringer/angr_ctf (github.com) angr CTF (oregonctf.org) angr符号执行练习 00_angr_find_哔哩哔哩_bilibili angr 学习 | SkYe231 Blog (mrskye.cn)...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"CTF","slug":"CTF","count":8,"path":"api/categories/CTF.json"}],"tags":[{"name":"ctf","slug":"ctf","count":8,"path":"api/tags/ctf.json"},{"name":"re","slug":"re","count":12,"path":"api/tags/re.json"},{"name":"angr","slug":"angr","count":1,"path":"api/tags/angr.json"}],"author":{"name":"御史神风","slug":"御史神风","avatar":"/blog/imgs/child.jpg","link":"/","description":"芜湖~好耶!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}